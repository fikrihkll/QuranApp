package com.sod.quran.fragments;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.os.Bundle;import androidx.fragment.app.Fragment;import androidx.lifecycle.Observer;import androidx.lifecycle.ViewModelProviders;import androidx.localbroadcastmanager.content.LocalBroadcastManager;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import com.sod.quran.R;import com.sod.quran.activity.SuratViewActivity;import com.sod.quran.adapter.FavoriteAdapter;import com.sod.quran.model.SaveModel;import com.sod.quran.viewmodel.ViewModelDashboard;import java.util.ArrayList;public class DashboardFragment extends Fragment{    private ViewModelDashboard vm;    private OnFragmentInteractionListener mListener;    private TextView tvSuratLR, tvAyatLR, btnContinue, tvNoFav;    private ArrayList<SaveModel> listLastRead=new ArrayList<>(  );    private ArrayList<SaveModel> listFav=new ArrayList<>(  );    private FavoriteAdapter favAdapter;    private RecyclerView rcFav;    public DashboardFragment() {    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {        View view=inflater.inflate( R.layout.fragment_dashboard, container, false );        tvSuratLR=view.findViewById( R.id.tvSuratLR );        tvAyatLR=view.findViewById( R.id.tvAyatLR );        tvNoFav=view.findViewById( R.id.tvNoFav );        rcFav=view.findViewById( R.id.rcLove );        btnContinue=view.findViewById( R.id.btnContinue );        rcFav.setLayoutManager( new LinearLayoutManager( getContext() ) );        listFav=new ArrayList<>(  );        vm=ViewModelProviders.of( this ).get( ViewModelDashboard.class );        vm.getLastRead().observe( this,getLastRead );        vm.getFav().observe( this,getFav );        listener();        getAllData();        LocalBroadcastManager.getInstance( getContext() ).registerReceiver( bcUpdate,new IntentFilter( "RELOAD_DATA" ) );        return view;    }    private void listener(){        btnContinue.setOnClickListener( new View.OnClickListener() {            @Override            public void onClick(View v) {                if(listLastRead!=null && listLastRead.size()!=0){                    Intent inte=new Intent( getContext(), SuratViewActivity.class );                    inte.putExtra( SuratViewActivity.SURAT_POS_EXTRAKEY, listLastRead.get( listLastRead.size()-1 ).getSuratID());                    inte.putExtra( SuratViewActivity.AYAT_POS_EXTRAKEY, listLastRead.get( listLastRead.size()-1 ).getAyatID());                    startActivity( inte );                }            }        } );    }    private void getAllData(){        vm.setLastRead();        vm.setListFav();    }    Observer<ArrayList<SaveModel>>getLastRead=new Observer<ArrayList<SaveModel>>() {        @Override        public void onChanged(ArrayList<SaveModel> saveModels) {            listLastRead=saveModels;            if(listLastRead.size()>0){                tvSuratLR.setText( listLastRead.get( listLastRead.size()-1 ).getSuratName() );                tvAyatLR.setText( listLastRead.get( listLastRead.size()-1 ).getAyatName() );            }        }    };    Observer<ArrayList<SaveModel>>getFav=new Observer<ArrayList<SaveModel>>() {        @Override        public void onChanged(ArrayList<SaveModel> saveModels) {            listFav=saveModels;            favAdapter=new FavoriteAdapter( listFav,getContext() );            rcFav.setAdapter( favAdapter );            if(listFav.size()>0){                tvNoFav.setVisibility( View.GONE );            }else                tvNoFav.setVisibility( View.VISIBLE );        }    };    @Override    public void onAttach(Context context) {        super.onAttach( context );        if (context instanceof OnFragmentInteractionListener) {            mListener = (OnFragmentInteractionListener) context;        } else {            throw new RuntimeException( context.toString() + " must implement OnFragmentInteractionListener" );        }    }    @Override    public void onDetach() {        super.onDetach();        mListener = null;    }    private BroadcastReceiver bcUpdate=new BroadcastReceiver() {        @Override        public void onReceive(Context context, Intent intent) {            getAllData();        }    };    @Override    public void onDestroy() {        super.onDestroy();        LocalBroadcastManager.getInstance( getContext() ).unregisterReceiver( bcUpdate );    }    public interface OnFragmentInteractionListener {        void sendMsg(String str);    }}